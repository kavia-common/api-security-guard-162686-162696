{"is_source_file": true, "format": "Python", "description": "This file implements the main FastAPI application for the API security platform backend. It defines API endpoints for health checks, event ingestion and querying, API endpoint management, security findings, rate limiting policies, API key management, and reporting. The code sets up the FastAPI app, middleware, in-memory repositories, and routes with detailed documentation.", "external_files": ["./models", "./schemas", "./storage"], "external_methods": ["fastapi.FastAPI", "fastapi.HTTPException", "fastapi.Query", "fastapi.middleware.cors.CORSMiddleware"], "published": ["app", "health_check", "ingest_event", "list_events", "upsert_api_endpoint", "list_api_endpoints", "create_finding", "list_findings", "ack_finding", "create_rate_limit", "list_rate_limits", "update_rate_limit", "create_api_key", "list_api_keys", "update_api_key", "delete_api_key", "generate_report"], "classes": [], "methods": [{"name": "health_check()", "description": "Health check endpoint that returns a status message indicating the service is running.", "scope": "", "scopeKind": ""}, {"name": "ingest_event(payload: EventIngestRequest)", "description": "Endpoint to ingest an event into the system, returning the stored event response.", "scope": "", "scopeKind": ""}, {"name": "list_events( service: Optional[str] = Query(default=None, description=\"Filter by service.\"), path: Optional[str] = Query(default=None, description=\"Filter by path.\"), )", "description": "Endpoint to list ingested events with optional filtering by service and path.", "scope": "", "scopeKind": ""}, {"name": "upsert_api_endpoint(payload: APIDescriptorCreateRequest)", "description": "Register or update an API endpoint descriptor.", "scope": "", "scopeKind": ""}, {"name": "list_api_endpoints(service: Optional[str] = Query(default=None, description=\"Filter by service name.\"))", "description": "Retrieve list of registered API endpoints, optionally filtered by service.", "scope": "", "scopeKind": ""}, {"name": "create_finding(payload: FindingCreateRequest)", "description": "Create a new security finding or alert.", "scope": "", "scopeKind": ""}, {"name": "list_findings( severity: Optional[FindingSeverity] = Query(default=None, description=\"Filter by severity.\"), acknowledged: Optional[bool] = Query(default=None, description=\"Filter by acknowledgment.\"), )", "description": "Retrieve list of security findings, filterable by severity and acknowledgment status.", "scope": "", "scopeKind": ""}, {"name": "ack_finding(finding_id: str, payload: FindingAcknowledgeRequest)", "description": "Set acknowledgment status on a specific finding.", "scope": "", "scopeKind": ""}, {"name": "create_rate_limit(payload: RateLimitPolicyCreateRequest)", "description": "Create a new rate limit policy.", "scope": "", "scopeKind": ""}, {"name": "list_rate_limits()", "description": "Retrieve all rate limit policies.", "scope": "", "scopeKind": ""}, {"name": "update_rate_limit(policy_id: str, payload: RateLimitPolicyCreateRequest)", "description": "Update parameters of an existing rate limit policy.", "scope": "", "scopeKind": ""}, {"name": "create_api_key(payload: APIKeyCreateRequest)", "description": "Create a new API key, returning the token once.", "scope": "", "scopeKind": ""}, {"name": "list_api_keys()", "description": "List existing API keys without exposing their secret tokens.", "scope": "", "scopeKind": ""}, {"name": "update_api_key(key_id: str, payload: APIKeyUpdateRequest)", "description": "Update details of an existing API key.", "scope": "", "scopeKind": ""}, {"name": "delete_api_key(key_id: str)", "description": "Remove an API key from the system.", "scope": "", "scopeKind": ""}, {"name": "generate_report(payload: ReportQuery)", "description": "Generate a report with current data stats based on provided query parameters.", "scope": "", "scopeKind": ""}], "calls": ["FastAPI", "add_middleware", "_events.add", "_api_desc.upsert", "_findings.create", "_findings.list", "_findings.set_ack", "_rate_limits.create", "_rate_limits.list", "_rate_limits.update", "_api_keys.create", "_api_keys.list", "_api_keys.update", "_api_keys.delete", "_reports.generate"], "search-terms": ["FastAPI endpoints", "API security platform", "event ingestion", "findings management", "rate limiting", "API key management", "report generation", "Health check", "In-memory repositories", "API descriptor"], "state": 2, "file_id": 3, "knowledge_revision": 17, "git_revision": "2b00f3fe22739cea6491cdb5e7caacda4d18183f", "revision_history": [{"9": "a9b0bcf3d925ba4bf274c933437343a4a28753f5"}, {"16": "2b00f3fe22739cea6491cdb5e7caacda4d18183f"}, {"17": "2b00f3fe22739cea6491cdb5e7caacda4d18183f"}], "ctags": [{"_type": "tag", "name": "_api_desc", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_api_desc = APIDescriptorRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_api_keys", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_api_keys = APIKeyRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_events", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_events = EventRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_findings", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_findings = FindingRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_rate_limits", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_rate_limits = RateLimitRepository()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_reports", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^_reports = ReportingService(events=_events, findings=_findings)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ack_finding", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def ack_finding(finding_id: str, payload: FindingAcknowledgeRequest):$/", "language": "Python", "kind": "function", "signature": "(finding_id: str, payload: FindingAcknowledgeRequest)"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_api_key", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def create_api_key(payload: APIKeyCreateRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: APIKeyCreateRequest)"}, {"_type": "tag", "name": "create_finding", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def create_finding(payload: FindingCreateRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: FindingCreateRequest)"}, {"_type": "tag", "name": "create_rate_limit", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def create_rate_limit(payload: RateLimitPolicyCreateRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: RateLimitPolicyCreateRequest)"}, {"_type": "tag", "name": "delete_api_key", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def delete_api_key(key_id: str):$/", "language": "Python", "kind": "function", "signature": "(key_id: str)"}, {"_type": "tag", "name": "generate_report", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def generate_report(payload: ReportQuery):$/", "language": "Python", "kind": "function", "signature": "(payload: ReportQuery)"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ingest_event", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def ingest_event(payload: EventIngestRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: EventIngestRequest)"}, {"_type": "tag", "name": "list_api_endpoints", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def list_api_endpoints(service: Optional[str] = Query(default=None, description=\"Filter by servi/", "language": "Python", "kind": "function", "signature": "(service: Optional[str] = Query(default=None, description=\"Filter by service name.\"))"}, {"_type": "tag", "name": "list_api_keys", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def list_api_keys():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "list_events", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def list_events($/", "language": "Python", "kind": "function", "signature": "( service: Optional[str] = Query(default=None, description=\"Filter by service.\"), path: Optional[str] = Query(default=None, description=\"Filter by path.\"), )"}, {"_type": "tag", "name": "list_findings", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def list_findings($/", "language": "Python", "kind": "function", "signature": "( severity: Optional[FindingSeverity] = Query(default=None, description=\"Filter by severity.\"), acknowledged: Optional[bool] = Query(default=None, description=\"Filter by acknowledgment.\"), )"}, {"_type": "tag", "name": "list_rate_limits", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def list_rate_limits():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_api_key", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def update_api_key(key_id: str, payload: APIKeyUpdateRequest):$/", "language": "Python", "kind": "function", "signature": "(key_id: str, payload: APIKeyUpdateRequest)"}, {"_type": "tag", "name": "update_rate_limit", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def update_rate_limit(policy_id: str, payload: RateLimitPolicyCreateRequest):$/", "language": "Python", "kind": "function", "signature": "(policy_id: str, payload: RateLimitPolicyCreateRequest)"}, {"_type": "tag", "name": "upsert_api_endpoint", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/main.py", "pattern": "/^def upsert_api_endpoint(payload: APIDescriptorCreateRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: APIDescriptorCreateRequest)"}], "hash": "dbffdf27de12f1b4221a7edb7f3d9fff", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/main.py", "fields": [{"name": "_api_desc = APIDescriptorRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_api_keys = APIKeyRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_events = EventRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_findings = FindingRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_rate_limits = RateLimitRepository()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_reports = ReportingService(events=_events, findings=_findings)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}