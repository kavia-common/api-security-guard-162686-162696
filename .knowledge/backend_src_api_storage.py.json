{"is_source_file": true, "format": "Python", "description": "This file contains in-memory storage implementations for a security API project, including repositories for API keys, API descriptors, events, findings, rate limits, and a reporting service. It provides CRUD operations and data abstraction for various security-related entities within the project.", "external_files": ["./models"], "external_methods": ["APIKey.generate_token()"], "published": ["APIKeyRepository", "APIDescriptorRepository", "EventRepository", "FindingRepository", "RateLimitRepository", "ReportingService"], "classes": [{"name": "APIKeyRepository", "description": "In-memory repository managing API keys, allowing creation, listing, retrieval, updating, and deletion."}, {"name": "APIDescriptorRepository", "description": "Repository for managing API endpoint descriptors with upsert and list capabilities."}, {"name": "EventRepository", "description": "Stores and manages event records, supporting adding and listing with filters."}, {"name": "FindingRepository", "description": "Manages findings records, including creation, listing with filters, and acknowledgment toggling."}, {"name": "RateLimitRepository", "description": "Handles rate limit policies with create, update, list, get, and delete operations."}, {"name": "ReportingService", "description": "Provides report generation based on stored events and findings, with retrieval capabilities."}], "methods": [{"name": "str _gen_id(prefix: str)", "description": "Generates a unique identifier with a given prefix using secrets token.", "scope": "", "scopeKind": ""}, {"name": "Tuple[APIKey,str] create(self, name: str, scopes: Iterable[str], metadata: Dict[str, str])", "description": "Creates and returns new instances for various repositories (e.g., APIKeyRepository, RateLimitRepository).", "scope": "APIKeyRepository", "scopeKind": "class"}, {"name": "List[APIKey] list(self)", "description": "Returns a list of stored objects, supports optional filtering parameters.", "scope": "APIKeyRepository", "scopeKind": "class"}, {"name": "Optional[APIDescriptor] get(self, descriptor_id: str)", "description": "Retrieves a stored object by its ID.", "scope": "APIDescriptorRepository", "scopeKind": "class"}, {"name": "Optional[APIKey] update( self, key_id: str, name: Optional[str] = None, scopes: Optional[Iterable[str]] = None, enabled: Optional[bool] = None, metadata: Optional[Dict[str, str]] = None, )", "description": "Updates fields of existing stored objects, such as API keys or rate limit policies.", "scope": "APIKeyRepository", "scopeKind": "class"}, {"name": "bool delete(self, key_id: str)", "description": "Deletes a stored object by ID, returning success status.", "scope": "APIKeyRepository", "scopeKind": "class"}, {"name": "APIDescriptor upsert(self, payload: Dict)", "description": "Creates or updates an API descriptor, identified by a composite key.", "scope": "APIDescriptorRepository", "scopeKind": "class"}, {"name": "EventRecord add(self, payload: Dict)", "description": "Adds a new event record to the event store.", "scope": "EventRepository", "scopeKind": "class"}, {"name": "Report generate(self, title: str, description: Optional[str], params: Dict[str, str])", "description": "Generates a report with basic aggregated statistics from events and findings.", "scope": "ReportingService", "scopeKind": "class"}, {"name": "Optional[APIKey] get(self, key_id: str)", "description": "Retrieves a report by ID.", "scope": "APIKeyRepository", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, events: EventRepository, findings: FindingRepository)", "scope": "ReportingService", "scopeKind": "class", "description": "unavailable"}, {"name": "Finding create(self, payload: Dict)", "scope": "FindingRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "RateLimitPolicy create(self, payload: Dict)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "bool delete(self, policy_id: str)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[RateLimitPolicy] get(self, policy_id: str)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Report] get(self, report_id: str)", "scope": "ReportingService", "scopeKind": "class", "description": "unavailable"}, {"name": "List[RateLimitPolicy] list(self)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "List[APIDescriptor] list(self, service: Optional[str] = None)", "scope": "APIDescriptorRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "List[EventRecord] list(self, service: Optional[str] = None, path: Optional[str] = None)", "scope": "EventRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Finding] list(self, severity: Optional[FindingSeverity] = None, acknowledged: Optional[bool] = None)", "scope": "FindingRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Finding] set_ack(self, finding_id: str, acknowledged: bool)", "scope": "FindingRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[RateLimitPolicy] update(self, policy_id: str, payload: Dict)", "scope": "RateLimitRepository", "scopeKind": "class", "description": "unavailable"}], "calls": ["secrets.token_urlsafe", "APIKey.generate_token()", "datetime.utcnow()"], "search-terms": ["in-memory storage", "APIKeyRepository", "APIDescriptorRepository", "EventRepository", "FindingRepository", "RateLimitRepository", "ReportingService", "token_urlsafe", "create_or_update API descriptor", "generate report", "API security storage"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "APIDescriptorRepository", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class APIDescriptorRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "APIKeyRepository", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class APIKeyRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "EventRepository", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class EventRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "FindingRepository", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class FindingRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RateLimitRepository", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class RateLimitRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ReportingService", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^class ReportingService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "APIDescriptorRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "EventRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "FindingRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def __init__(self, events: EventRepository, findings: FindingRepository) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, events: EventRepository, findings: FindingRepository)", "scope": "ReportingService", "scopeKind": "class"}, {"_type": "tag", "name": "_gen_id", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^def _gen_id(prefix: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(prefix: str)"}, {"_type": "tag", "name": "add", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def add(self, payload: Dict) -> EventRecord:$/", "language": "Python", "typeref": "typename:EventRecord", "kind": "member", "signature": "(self, payload: Dict)", "scope": "EventRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def create(self, name: str, scopes: Iterable[str], metadata: Dict[str, str]) -> Tuple[APIKey/", "language": "Python", "typeref": "typename:Tuple[APIKey,str]", "kind": "member", "signature": "(self, name: str, scopes: Iterable[str], metadata: Dict[str, str])", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def create(self, payload: Dict) -> Finding:$/", "language": "Python", "typeref": "typename:Finding", "kind": "member", "signature": "(self, payload: Dict)", "scope": "FindingRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def create(self, payload: Dict) -> RateLimitPolicy:$/", "language": "Python", "typeref": "typename:RateLimitPolicy", "kind": "member", "signature": "(self, payload: Dict)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def delete(self, key_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key_id: str)", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def delete(self, policy_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, policy_id: str)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "generate", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def generate(self, title: str, description: Optional[str], params: Dict[str, str]) -> Report/", "language": "Python", "typeref": "typename:Report", "kind": "member", "signature": "(self, title: str, description: Optional[str], params: Dict[str, str])", "scope": "ReportingService", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def get(self, descriptor_id: str) -> Optional[APIDescriptor]:$/", "language": "Python", "typeref": "typename:Optional[APIDescriptor]", "kind": "member", "signature": "(self, descriptor_id: str)", "scope": "APIDescriptorRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def get(self, key_id: str) -> Optional[APIKey]:$/", "language": "Python", "typeref": "typename:Optional[APIKey]", "kind": "member", "signature": "(self, key_id: str)", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def get(self, policy_id: str) -> Optional[RateLimitPolicy]:$/", "language": "Python", "typeref": "typename:Optional[RateLimitPolicy]", "kind": "member", "signature": "(self, policy_id: str)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def get(self, report_id: str) -> Optional[Report]:$/", "language": "Python", "typeref": "typename:Optional[Report]", "kind": "member", "signature": "(self, report_id: str)", "scope": "ReportingService", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def list(self) -> List[APIKey]:$/", "language": "Python", "typeref": "typename:List[APIKey]", "kind": "member", "signature": "(self)", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def list(self) -> List[RateLimitPolicy]:$/", "language": "Python", "typeref": "typename:List[RateLimitPolicy]", "kind": "member", "signature": "(self)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def list(self, service: Optional[str] = None) -> List[APIDescriptor]:$/", "language": "Python", "typeref": "typename:List[APIDescriptor]", "kind": "member", "signature": "(self, service: Optional[str] = None)", "scope": "APIDescriptorRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def list(self, service: Optional[str] = None, path: Optional[str] = None) -> List[EventRecor/", "language": "Python", "typeref": "typename:List[EventRecord]", "kind": "member", "signature": "(self, service: Optional[str] = None, path: Optional[str] = None)", "scope": "EventRepository", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def list(self, severity: Optional[FindingSeverity] = None, acknowledged: Optional[bool] = No/", "language": "Python", "typeref": "typename:List[Finding]", "kind": "member", "signature": "(self, severity: Optional[FindingSeverity] = None, acknowledged: Optional[bool] = None)", "scope": "FindingRepository", "scopeKind": "class"}, {"_type": "tag", "name": "set_ack", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def set_ack(self, finding_id: str, acknowledged: bool) -> Optional[Finding]:$/", "language": "Python", "typeref": "typename:Optional[Finding]", "kind": "member", "signature": "(self, finding_id: str, acknowledged: bool)", "scope": "FindingRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def update($/", "language": "Python", "typeref": "typename:Optional[APIKey]", "kind": "member", "signature": "( self, key_id: str, name: Optional[str] = None, scopes: Optional[Iterable[str]] = None, enabled: Optional[bool] = None, metadata: Optional[Dict[str, str]] = None, )", "scope": "APIKeyRepository", "scopeKind": "class"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def update(self, policy_id: str, payload: Dict) -> Optional[RateLimitPolicy]:$/", "language": "Python", "typeref": "typename:Optional[RateLimitPolicy]", "kind": "member", "signature": "(self, policy_id: str, payload: Dict)", "scope": "RateLimitRepository", "scopeKind": "class"}, {"_type": "tag", "name": "upsert", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/storage.py", "pattern": "/^    def upsert(self, payload: Dict) -> APIDescriptor:$/", "language": "Python", "typeref": "typename:APIDescriptor", "kind": "member", "signature": "(self, payload: Dict)", "scope": "APIDescriptorRepository", "scopeKind": "class"}], "hash": "191a26d5716627d33e733d6c531c21bd", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/storage.py", "revision_history": [{"15": ""}]}