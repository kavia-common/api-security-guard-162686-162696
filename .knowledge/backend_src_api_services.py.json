{"is_source_file": true, "format": "Python", "description": "This Python source file defines a DetectionService class responsible for orchestrating various security detection mechanisms, including shadow API detection, anomaly detection, static security rule checks, and creating findings related to potential security issues within a web API context.", "external_files": ["models.py", "storage.py", "shadow_detector.py", "anomaly_detector.py", "owasp_rules.py", "remediator.py"], "external_methods": ["models.EventRecord", "models.FindingSeverity", "storage.APIDescriptorRepository", "storage.EventRepository", "storage.FindingRepository", "shadow_detector.ShadowAPIDetector.detect", "anomaly_detector.AnomalyDetector.observe", "owasp_rules.check_sensitive_header_leak", "owasp_rules.check_sensitive_path_method", "owasp_rules.check_large_payload", "remediator.Remediator"], "published": ["DetectionService"], "classes": [{"name": "DetectionService", "description": "Coordinates various security detection components (shadow API detection, anomaly detection, static rule checks) and creates security findings based on observed events."}], "methods": [{"name": "None on_event_ingested(self, event: EventRecord)", "description": "Main method triggered on ingestion of a new event to run all detectors and create findings accordingly.", "scope": "DetectionService", "scopeKind": "class"}, {"name": "None __init__( self, api_catalog: APIDescriptorRepository, events: EventRepository, findings: FindingRepository, )", "scope": "DetectionService", "scopeKind": "class", "description": "unavailable"}, {"name": "Set[str] _catalog_keys(self)", "scope": "DetectionService", "scopeKind": "class", "description": "unavailable"}, {"name": "None _create_finding( self, severity: FindingSeverity, title: str, description: str, event: EventRecord, rule_id: Optional[str], extra: Optional[Dict[str, str]] = None, )", "scope": "DetectionService", "scopeKind": "class", "description": "unavailable"}, {"name": "None _refresh_shadow_catalog(self)", "scope": "DetectionService", "scopeKind": "class", "description": "unavailable"}], "calls": ["self._shadow.detect", "self._anomaly.observe", "check_sensitive_header_leak", "check_sensitive_path_method", "check_large_payload"], "search-terms": ["DetectionService", "shadow API detection", "anomaly detection", "OWASP static rule checks", "findings creation", "orchestrator"], "state": 2, "file_id": 12, "knowledge_revision": 28, "git_revision": "", "ctags": [{"_type": "tag", "name": "DetectionService", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^class DetectionService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^    def __init__($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, api_catalog: APIDescriptorRepository, events: EventRepository, findings: FindingRepository, )", "scope": "DetectionService", "scopeKind": "class"}, {"_type": "tag", "name": "_catalog_keys", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^    def _catalog_keys(self) -> Set[str]:$/", "language": "Python", "typeref": "typename:Set[str]", "kind": "member", "signature": "(self)", "scope": "DetectionService", "scopeKind": "class"}, {"_type": "tag", "name": "_create_finding", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^    def _create_finding($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, severity: FindingSeverity, title: str, description: str, event: EventRecord, rule_id: Optional[str], extra: Optional[Dict[str, str]] = None, )", "scope": "DetectionService", "scopeKind": "class"}, {"_type": "tag", "name": "_refresh_shadow_catalog", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^    def _refresh_shadow_catalog(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "DetectionService", "scopeKind": "class"}, {"_type": "tag", "name": "on_event_ingested", "path": "/home/kavia/workspace/code-generation/api-security-guard-162686-162696/backend/src/api/services.py", "pattern": "/^    def on_event_ingested(self, event: EventRecord) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, event: EventRecord)", "scope": "DetectionService", "scopeKind": "class"}], "hash": "d7fdf8637615c71ed2ca4f179d9641b0", "format-version": 4, "code-base-name": "backend", "filename": "backend/src/api/services.py", "revision_history": [{"28": ""}]}